cmake_minimum_required(VERSION 3.8)

set(CMAKE_TOOLCHAIN_FILE "${CMAKE_SOURCE_DIR}/vcpkg/scripts/buildsystems/vcpkg.cmake" CACHE STRING "Vcpkg toolchain file")

get_filename_component(CRUCIBLE_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
include(CMakeFindDependencyMacro)

# Not used by windows... yet
find_package(SDL2 REQUIRED)
if(NOT ${SDL_FOUND})
	message("SDL2>=${SDL_VERSION} not found, it does not do anything under windows, but it wouldn't compile under windows!")
else()
	message("SDL2 ${SDL2} Found.")
endif()
include_directories(${SDL2_INCLUDE_DIR})

if (WIN32)
    # TODO: Choose whether to use SDL2 on windows as well
    set(TARGET_NAME Crucible::Crucible_Windows)
    set(LIBDXCOMPILER "dxcompiler.dll")
else ()
    set(TARGET_NAME Crucible::Crucible_Linux)
    find_package(Vulkan REQUIRED)
    find_package(OpenImageDenoise QUIET)
    find_package(Threads REQUIRED)
    if(NOT ${OpenImageDenoise_FOUND})
        message("OpenImageDenoise not found, it will be disabled.")
    else()
        message("OpenImageDenoise Found.")
    endif()

    set(LIBDXCOMPILER "libdxcompiler.so")
endif()

if (NOT TARGET Crucible::Crucible)
    include("${CRUCIBLE_CMAKE_DIR}/CrucibleTargets.cmake")
    add_library(Crucible::Crucible ALIAS ${TARGET_NAME})

    set(Crucible_SHADER_DIR "@_CONFIG_INSTALL_DIR_INCLUDE@/Crucible/shaders/")
    target_compile_definitions(${TARGET_NAME} INTERFACE "Crucible_SHADER_DIR=\"${Crucible_SHADER_DIR}\"")

    add_library(Crucible::dxcompiler SHARED IMPORTED)
    set_property(TARGET Crucible::dxcompiler PROPERTY
            IMPORTED_LOCATION "@_CONFIG_INSTALL_DIR_LIB@/Crucible/${LIBDXCOMPILER}" )
endif()

set(Crucible_LIBRARIES Crucible::Crucible ${TARGET_NAME})
