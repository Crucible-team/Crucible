# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.22)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS WickedEngine::WickedEngine_Linux WickedEngine::Bullet WickedEngine::LUA WickedEngine::Utility WickedEngine::FAudio)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target WickedEngine::WickedEngine_Linux
add_library(WickedEngine::WickedEngine_Linux STATIC IMPORTED)

set_target_properties(WickedEngine::WickedEngine_Linux PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "WI_UNORDERED_MAP_TYPE=2;SDL2=1"
  INTERFACE_INCLUDE_DIRECTORIES "/home/deck/Crucible/WickedEngine"
  INTERFACE_LINK_LIBRARIES "Threads::Threads;SDL2::SDL2;\$<\$<BOOL:0>:OpenImageDenoise>;\$<LINK_ONLY:dl>;WickedEngine::Bullet;WickedEngine::LUA;WickedEngine::Utility;WickedEngine::FAudio"
)

# Create imported target WickedEngine::Bullet
add_library(WickedEngine::Bullet STATIC IMPORTED)

set_target_properties(WickedEngine::Bullet PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/deck/Crucible/WickedEngine/BULLET"
)

# Create imported target WickedEngine::LUA
add_library(WickedEngine::LUA STATIC IMPORTED)

set_target_properties(WickedEngine::LUA PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "LUA_USE_POSIX=1"
)

# Create imported target WickedEngine::Utility
add_library(WickedEngine::Utility STATIC IMPORTED)

# Create imported target WickedEngine::FAudio
add_library(WickedEngine::FAudio STATIC IMPORTED)

set_target_properties(WickedEngine::FAudio PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/deck/Crucible/WickedEngine/Utility/FAudio/src;/home/deck/Crucible/WickedEngine/Utility/FAudio/include;/usr/include;/usr/include/SDL2"
  INTERFACE_LINK_LIBRARIES "SDL2::SDL2main;SDL2::SDL2"
)

# Import target "WickedEngine::WickedEngine_Linux" for configuration "Release"
set_property(TARGET WickedEngine::WickedEngine_Linux APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(WickedEngine::WickedEngine_Linux PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/deck/Crucible/BUILD/WickedEngine/libWickedEngine_Linux.a"
  )

# Import target "WickedEngine::Bullet" for configuration "Release"
set_property(TARGET WickedEngine::Bullet APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(WickedEngine::Bullet PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/deck/Crucible/BUILD/WickedEngine/BULLET/libBullet.a"
  )

# Import target "WickedEngine::LUA" for configuration "Release"
set_property(TARGET WickedEngine::LUA APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(WickedEngine::LUA PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/deck/Crucible/BUILD/WickedEngine/LUA/libLUA.a"
  )

# Import target "WickedEngine::Utility" for configuration "Release"
set_property(TARGET WickedEngine::Utility APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(WickedEngine::Utility PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C;CXX"
  IMPORTED_LOCATION_RELEASE "/home/deck/Crucible/BUILD/WickedEngine/Utility/libUtility.a"
  )

# Import target "WickedEngine::FAudio" for configuration "Release"
set_property(TARGET WickedEngine::FAudio APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(WickedEngine::FAudio PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C"
  IMPORTED_LOCATION_RELEASE "/home/deck/Crucible/BUILD/WickedEngine/Utility/FAudio/libFAudio.a"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
